ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[1],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[2])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[1],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(probeData$Search_Key==top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[1],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(probeData$Search_Key[top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[1],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[2])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[1],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
for(i in 1:4) { j= top5genes[i]; ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[j],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[j])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for(i in 1:1) { j= top5genes[i]; ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[j],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[j])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for(i in 1:1) { j= top5genes[i]; ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[j],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[j])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for(i in 1:1) { j= top5genes[i]; ggplot(dataGQ, aes_string(y=as.character(orderedProbes[orderedProbes$Search_Key==top5genes[j],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[j])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for(i in 1:1) { j= top5genes[i]; ggplot(dataGQ, aes_string(y=as.character(orderedProbes[orderedProbes==top5genes[j],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[j])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for(i in 1:1) { j= top5genes[i]; ggplot(dataGQ, aes_string(y=as.character(orderedProbes[top5genes[j],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[j])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for(i in 1:1) { j= top5genes[i]; ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[j],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[j])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[j],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[j])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[1],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[for(i in 1:5 {i})],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[for(i in 1:5 ){i})],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[for(i in 1:5 ){i}],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[for(i in 1:5 ){i},1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[for(i in 1:5 ){i},1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[for(i in 1:4) {i}],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[j])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
for (1ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i,1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
for (i in 1:5){ (1ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i,1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw() }
for (i in 1:5){ (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i,1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw() }
for (i in 1:5){ (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw() }
> for(i in 1:1) { j= top5genes[i]; ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[j],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[j])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for(i in 1:1) { j= top5genes[i]; ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[j],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[j])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[1],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[1],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
for (i in 1:5) {ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in 1:4) {ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in 0:4) {ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in 2:4) {ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in 2) {ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in 3) {ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in 1:1) {ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in 1:2) {ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in 1:1) {ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in 1:2) {ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in (1:2) {ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in (1:2)) {ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in (1:4)) {ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in (1:4)) {i ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in (1:4)) {i, ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in (1:4)) {i; ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in (1:4)) {print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())}
for (i in (1:1)) {print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())}
for (i in (1:2)) {print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())}
for (i in (1:3)) {print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())}
for (i in (4)) {print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())}
for (i in (3)) {print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())}
for (i in (2)) {print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())}
top5genes
for (i in (2)) {print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key=='LOC643334',1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())}
for (i in (2)) {print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key=='LOC643334',1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())}
print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key=='LOC643334',1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())
print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key=='GAPDH',1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())
print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key=='DUSP22',1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())
plot=ggplot(dnc, aes_string(y=as.character(probeData[j,1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(geneNames[j])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
plot=ggplot(dnc, aes_string(y=as.character(probeData[1,1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(geneNames[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
plot=ggplot(dnc, aes_string(y=as.character(probeData[2,1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(geneNames[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
plot=ggplot(dnc, aes_string(y=as.character(probeData[4,1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(geneNames[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
library(ggplot2)
> for (i in (2)) {print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())}
for (i in (2)) {print (ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[i],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())}
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[j],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[j])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[1],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[1])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==top5genes[3],1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[3])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
top5genes
ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==(top5genes[3]),1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[3])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()
(top5genes[3])
(top5genes[4])
(top5genes[5])
(top5genes[6])
(top5genes[1])
for (i in 1:5) {j <- orderedProbes[i]; ggplot(dataGQ, aes_string(y=as.character(probeData[probeData$Search_Key==(top5genes[i]),1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in 1:5) {j <- orderedProbes[i]; ggplot(dataGQ, aes_string(y=as.character(probeData[i,1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw()}
for (i in 1:5) {j <- orderedProbes[i]; print(ggplot(dataGQ, aes_string(y=as.character(probeData[i,1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())}
pdf("Top10Genes_Boxplots.pdf")
for (i in 1:5) {j <- orderedProbes[i]; print(ggplot(dataGQ, aes_string(y=as.character(probeData[i,1]),x='characteristics_ch1.3',fill='characteristics_ch1.3'))+geom_boxplot()+ylab(top5genes[i])+xlab('Disease Status')+guides(fill=guide_legend(title=NULL))+theme_bw())}
top5genes
ggplot(dataGQ, aes_string(x = as.character(probeData[1,1]), fill = 'characteristics_ch1.3')) + geom_density(alpha = 0.3)
for (i in 1:5) {j<-orderedProbes[i]; print(ggplot(dataGQ, aes_string(x = as.character(probeData[i,1]), fill = 'characteristics_ch1.3')) + geom_density(alpha = 0.3))}
for (i in 1:5) {j<-orderedProbes[i]; print(ggplot(dataGQ, aes_string(x = as.character(probeData[i,1]), fill = 'characteristics_ch1.3')) + geom_density(alpha = 0.3)+ylab(top5genes[i])+xlab('Disease Status'))}
pdf?
?pdf
pdf("SampleGraph.pdf",width=7,height=5)
pdf("SampleGraph.pdf",width=7,height=5)
for (i in 1:5) {j<-orderedProbes[i]; print(ggplot(dataGQ, aes_string(x = as.character(probeData[i,1]), fill = 'characteristics_ch1.3')) + geom_density(alpha = 0.3)+ylab(top5genes[i])+xlab('Disease Status')) pdf("SampleGraph.pdf",width=7,height=5)
}
for (i in 1:5) {j<-orderedProbes[i]; print(ggplot(dataGQ, aes_string(x = as.character(probeData[i,1]), fill = 'characteristics_ch1.3')) + geom_density(alpha = 0.3)+ylab(top5genes[i])+xlab('Disease Status'))+pdf("SampleGraph.pdf",width=7,height=5)}
for (i in 1:5) {j<-orderedProbes[i]; print(ggplot(dataGQ, aes_string(x = as.character(probeData[i,1]), fill = 'characteristics_ch1.3')) + geom_density(alpha = 0.3)+ylab(top5genes[i])+xlab('Disease Status'))}
top5
top5genes
library(complexheatmap)
library(ComplexHeatMap)
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("ComplexHeatmap")
install.packages('Cairo')
library(ComplexHeatMap)
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("ComplexHeatmap")
if (!requireNamespace("BiocManager", quietly=TRUE))
install.packages("BiocManager")
BiocManager::install("ComplexHeatmap")
library(ComplexHeatmap)
library(ComplexHeatMap)
library(ComplexHeatmap)
day.7.de<-read.csv('/Users/vikas/Downloads/day.7.de.csv', header= TRUE)
trilineage<-read.csv('/Users/vikas/Downloads/trilineage.csv', header = TRUE)
View(trilineage)
View(day.7.de)
set.seed(123)
nr1 = 4; nr2 = 8; nr3 = 6; nr = nr1 + nr2 + nr3
nc1 = 6; nc2 = 8; nc3 = 10; nc = nc1 + nc2 + nc3
mat = cbind(rbind(matrix(rnorm(nr1*nc1, mean = 1,   sd = 0.5), nr = nr1),
matrix(rnorm(nr2*nc1, mean = 0,   sd = 0.5), nr = nr2),
matrix(rnorm(nr3*nc1, mean = 0,   sd = 0.5), nr = nr3)),
rbind(matrix(rnorm(nr1*nc2, mean = 0,   sd = 0.5), nr = nr1),
matrix(rnorm(nr2*nc2, mean = 1,   sd = 0.5), nr = nr2),
matrix(rnorm(nr3*nc2, mean = 0,   sd = 0.5), nr = nr3)),
rbind(matrix(rnorm(nr1*nc3, mean = 0.5, sd = 0.5), nr = nr1),
matrix(rnorm(nr2*nc3, mean = 0.5, sd = 0.5), nr = nr2),
matrix(rnorm(nr3*nc3, mean = 1,   sd = 0.5), nr = nr3))
)
mat = mat[sample(nr, nr), sample(nc, nc)] # random shuffle rows and columns
rownames(mat) = paste0("row", seq_len(nr))
colnames(mat) = paste0("column", seq_len(nc))
Heatmap(mat)
mat
View(day.7.de)
heatmap_matrix<-data.frame(x = 'sample', y = day.7.de$log2FoldChange, row.names = day.7.de$Gene)
View(heatmap_matrix)
heatmap_matrix<-data.frame(y = day.7.de$log2FoldChange, row.names = day.7.de$Gene)
View(heatmap_matrix)
heatmap_matrix<-data.frame(sample = day.7.de$log2FoldChange, row.names = day.7.de$Gene)
View(heatmap_matrix)
heatmap_matrix<-matrix(data.frame(sample = day.7.de$log2FoldChange, row.names = day.7.de$Gene))
heatmap_matrix
heatmap_matrix<-as.matrix(data.frame(sample = day.7.de$log2FoldChange, row.names = day.7.de$Gene))
heatmap_matrix
heatmap_matrix<-as.matrix(sample = day.7.de$log2FoldChange, row.names = day.7.de$Gene)
Heatmap(heatmap_matrix)
View(trilineage)
View(day.7.de)
x<-as.list(trilineage)
x
x<-list(trilineage)
x
genes_to_keep<-c(trilineage$Ectoderm,trilineage$Mesoderm,trilineage$Endoderm,trilineage$pluripotency.markers)
genes_to_keep
genes_to_keep<-complete.cases(c(trilineage$Ectoderm,trilineage$Mesoderm,trilineage$Endoderm,trilineage$pluripotency.markers))
genes_to_keep
genes_to_keep<-genes_to_keep[complete.cases(genes_to_keep)]
genes_to_keep
genes_to_keep<-genes_to_keep[which(complete.cases(genes_to_keep))]
genes_to_keep<-c(trilineage$Ectoderm,trilineage$Mesoderm,trilineage$Endoderm,trilineage$pluripotency.markers)
genes_to_keep<-genes_to_keep[(complete.cases(genes_to_keep))]
genes_to_keep
genes_to_keep<-c(trilineage$Ectoderm,trilineage$Mesoderm,trilineage$Endoderm,trilineage$pluripotency.markers)
genes_to_keep<-genes_to_keep[(complete.cases(genes_to_keep))]
genes_to_keep
genes_to_keep<-c(trilineage$Ectoderm,trilineage$Mesoderm,trilineage$Endoderm,trilineage$pluripotency.markers)
genes_to_keep<-genes_to_keep[which(complete.cases(genes_to_keep))]
genes_to_keep
genes_to_keep<-genes_to_keep[genes_to_keep != '']
genes_to_keep
heatmap_matrix<-data.frame(sample = day.7.de$log2FoldChange, row.names = day.7.de$Gene)
genes_to_keep<-c(trilineage$Ectoderm,trilineage$Mesoderm,trilineage$Endoderm,trilineage$pluripotency.markers)
genes_to_keep<-genes_to_keep[genes_to_keep != '']
heatmap_genes_to_keep<-heatmap_matrix[rownames(heatmap_matrix) %in% genes_to_keep,]
heatmap_genes_to_keep
heatmap_matrix<-data.frame(sample = day.7.de$log2FoldChange, row.names = day.7.de$Gene)
heatmap_genes_to_keep<-heatmap_matrix[rownames(heatmap_matrix) %in% genes_to_keep,]
heatmap_genes_to_keep
x<-as.data.frame(heatmap_genes_to_keep)
View(x)
heatmap_matrix<-data.frame(sample = day.7.de$log2FoldChange, gene = day.7.de$Gene)
genes_to_keep<-c(trilineage$Ectoderm,trilineage$Mesoderm,trilineage$Endoderm,trilineage$pluripotency.markers)
genes_to_keep<-genes_to_keep[genes_to_keep != '']
heatmap_genes_to_keep<-heatmap_matrix[rownames(heatmap_matrix) %in% genes_to_keep,]
heatmap_genes_to_keep<-heatmap_matrix[heatmap_matrix$gene %in% genes_to_keep,]
View(heatmap_genes_to_keep)
nrow(heatmap_genes_to_keep)
length(genes_to_keep)
length(which(unique(genes_to_keep)))
length((unique(genes_to_keep)))
View(trilineage)
heatmap_matrix <- matrix(heatmap_genes_to_keep$sample)
heatmap_matrix
rownames(heatmap_matrix = heatmap_genes_to_keep$gene)
?matrix
heatmap_matrix <- matrix(heatmap_genes_to_keep$sample,)
heatmap_matrix <- matrix(heatmap_genes_to_keep$sample,)
rownames(heatmap_matrix)<-heatmap_genes_to_keep$gene
heatmap_matrix
colnames(heatmap_matrix)<-'sample1'
Heatmap(heatmap_matrix)
library("taxize")
install.packages('taxize')
library("taxize")
species_names<-read.csv('/Users/vikas/Downloads/Species_Names', header = TRUE)
View(species_names)
species <- species_names$SpeciesNames
uids <- get_uid(species)
head(uids)
# keep only uids which you have in the database
uids.found <- as.uid(uids[!is.na(uids)])
# keep only species names  corresponding to your ids
species.found <- species[uids]
# keep only species names  corresponding to your ids
species.found <- species[as.uid(uids)]
species.found
# keep only uids which you have in the database
uids.found <- as.uid(uids[!is.na(uids)])
taxize::use_entrez()
taxize::use_entrez()
taxize::use_entrez()
# keep only uids which you have in the database
uids.found <- as.uid(uids[!is.na(uids)])
usethis::edit_r_environ()
usethis::edit_r_environ()
# keep only uids which you have in the database
uids.found <- as.uid(uids[!is.na(uids)])
library("taxize")
# keep only uids which you have in the database
uids.found <- as.uid(uids[!is.na(uids)])
uids<-head(uids)
uids
# keep only uids which you have in the database
uids.found <- as.uid(uids[!is.na(uids)])
# keep only species names  corresponding to your ids
species.found <- species[!is.na(uids)]
common.names <- sci2comm(uids.found, db = 'ncbi')
names(common.names) <- species.found
common.names
class(common.names)
names(common.names)
species.found
species.found
common.names
names(common.names)
names(common.names) <- species.found
uids <- get_uid(species)
# keep only uids which you have in the database
uids.found <- as.uid(uids[!is.na(uids)])
# keep only uids which you have in the database
uids.found <- as.uid(uids[!is.na(uids)])
?as.uid
# keep only uids which you have in the database
uids.found <- as.uid(uids[!is.na(uids)])
uids.found
rm uids.found
rm(uids.found)
# keep only uids which you have in the database
uids.found <- as.uid(uids[!is.na(uids)])
library(ggplot2)
library(EnhancedVolcano)
diffmod_table_12<-read.csv('/Users/vikas/Documents/UCSC/lab/testing/majority_direction_kmer_diffmod.table.csv', header = TRUE)
diffmod_table_12$neglogpval<- -log10(diffmod_table_12$pval_KO_vs_WT)
#diffmod_table_12<-diffmod_table_12[diffmod_table_12$pval_KO_vs_WT < 0.05,]
diffmod_table_12$sig = FALSE
diffmod_table_12$sig[diffmod_table_12$pval_KO_vs_WT < 0.05 ] = TRUE
ggplot(diffmod_table_12, aes( x = diff_mod_rate_KO_vs_WT , y = neglogpval, color = sig)) +
geom_point() +
scale_y_log10() +
theme_classic() +
geom_hline(yintercept = -log10(0.05)) +
ylab('-log10(pval)') +
xlab('diffence in modification rate')
rownames(diffmod_table_12)<-diffmod_table_12$id
z<-head(diffmod_table_12)
diffmod_table_12$gene<-sapply(strsplit(as.character(diffmod_table_12$id), "\\|"), `[`, 5)
plot_krasko_12<-EnhancedVolcano(diffmod_table_12,
lab = diffmod_table_12$gene,
x = 'diff_mod_rate_KO_vs_WT',
y = 'pval_KO_vs_WT',
xlim = c(-1.5,1.5),
FCcutoff = 0.8,
pCutoff = 0.001,
title = 'KRASKO vs day 5',
subtitle = '')
diffmod_table_04<-read.csv('/Users/vikas/Documents/UCSC/lab/testing/12/majority_direction_kmer_diffmod.table', header = TRUE)
diffmod_table_04$neglogpval<- -log10(diffmod_table_04$pval_KO_vs_WT)
#diffmod_table_04<-diffmod_table_04[diffmod_table_04$pval_KO_vs_WT < 0.05,]
diffmod_table_04$sig = FALSE
diffmod_table_04$sig[diffmod_table_04$pval_KO_vs_WT < 0.05 ] = TRUE
# plot_krasko_04<-ggplot(diffmod_table_04, aes( x = diff_mod_rate_KO_vs_WT , y = neglogpval, color = sig)) +
#   geom_point() +
#   scale_y_log10() +
#   theme_classic() +
#   geom_hline(yintercept = -log10(0.05)) +
#   ylab('-log10(pval)') +
#   xlab('diffence in modification rate')
rownames(diffmod_table_04)<-diffmod_table_04$id
z<-head(diffmod_table_04)
diffmod_table_04$gene<-sapply(strsplit(as.character(diffmod_table_04$id), "\\|"), `[`, 5)
plot_krasko_04<-EnhancedVolcano(diffmod_table_04,
lab = diffmod_table_04$gene,
x = 'diff_mod_rate_KO_vs_WT',
y = 'pval_KO_vs_WT',
xlim = c(-1.5,1.5),
FCcutoff = 0.8,
pCutoff = 0.001,
title = 'KRASKO vs day 7',
subtitle = '')
plot_krasko_04
plot_krasko_04
plot_krasko_12
diffmod_table_12<-read.csv('/Users/vikas/Documents/UCSC/lab/testing/majority_direction_kmer_diffmod.table.csv', header = TRUE)
diffmod_table_12$neglogpval<- -log10(diffmod_table_12$pval_KO_vs_WT)
#diffmod_table_12<-diffmod_table_12[diffmod_table_12$pval_KO_vs_WT < 0.05,]
diffmod_table_12$sig = FALSE
diffmod_table_12$sig[diffmod_table_12$pval_KO_vs_WT < 0.05 ] = TRUE
ggplot(diffmod_table_12, aes( x = diff_mod_rate_KO_vs_WT , y = neglogpval, color = sig)) +
geom_point() +
scale_y_log10() +
theme_classic() +
geom_hline(yintercept = -log10(0.05)) +
ylab('-log10(pval)') +
xlab('diffence in modification rate')
rownames(diffmod_table_12)<-diffmod_table_12$id
z<-head(diffmod_table_12)
diffmod_table_12$gene<-sapply(strsplit(as.character(diffmod_table_12$id), "\\|"), `[`, 5)
plot_krasko_12<-EnhancedVolcano(diffmod_table_12,
lab = diffmod_table_12$gene,
x = 'diff_mod_rate_KO_vs_WT',
y = 'pval_KO_vs_WT',
xlim = c(-1.5,1.5),
FCcutoff = 0.8,
pCutoff = 0.001,
title = 'KRASKO vs day 5',
subtitle = '')
plot_krasko_12
diffmod_table_04<-read.csv('/Users/vikas/Documents/UCSC/lab/testing/12/majority_direction_kmer_diffmod.table', header = TRUE)
diffmod_table_04$neglogpval<- -log10(diffmod_table_04$pval_KO_vs_WT)
#diffmod_table_04<-diffmod_table_04[diffmod_table_04$pval_KO_vs_WT < 0.05,]
diffmod_table_04$sig = FALSE
diffmod_table_04$sig[diffmod_table_04$pval_KO_vs_WT < 0.05 ] = TRUE
# plot_krasko_04<-ggplot(diffmod_table_04, aes( x = diff_mod_rate_KO_vs_WT , y = neglogpval, color = sig)) +
#   geom_point() +
#   scale_y_log10() +
#   theme_classic() +
#   geom_hline(yintercept = -log10(0.05)) +
#   ylab('-log10(pval)') +
#   xlab('diffence in modification rate')
rownames(diffmod_table_04)<-diffmod_table_04$id
z<-head(diffmod_table_04)
diffmod_table_04$gene<-sapply(strsplit(as.character(diffmod_table_04$id), "\\|"), `[`, 5)
plot_krasko_04<-EnhancedVolcano(diffmod_table_04,
lab = diffmod_table_04$gene,
x = 'diff_mod_rate_KO_vs_WT',
y = 'pval_KO_vs_WT',
xlim = c(-1.5,1.5),
FCcutoff = 0.8,
pCutoff = 0.001,
title = 'KRASKO vs day 7',
subtitle = '')
plot_krasko_04
library(ggplot2)
library(EnhancedVolcano)
gc()
library(ggplot2)
library(EnhancedVolcano)
diffmod_table_12<-read.csv('/Users/vikas/Documents/UCSC/lab/testing/12/majority_direction_kmer_diffmod.table', header = TRUE)
diffmod_table_12$neglogpval<- -log10(diffmod_table_12$pval_KO_vs_WT)
#diffmod_table_12<-diffmod_table_12[diffmod_table_12$pval_KO_vs_WT < 0.05,]
diffmod_table_12$sig = FALSE
diffmod_table_12$sig[diffmod_table_12$pval_KO_vs_WT < 0.05 ] = TRUE
ggplot(diffmod_table_12, aes( x = diff_mod_rate_KO_vs_WT , y = neglogpval, color = sig)) +
geom_point() +
scale_y_log10() +
theme_classic() +
geom_hline(yintercept = -log10(0.05)) +
ylab('-log10(pval)') +
xlab('diffence in modification rate')
rownames(diffmod_table_12)<-diffmod_table_12$id
z<-head(diffmod_table_12)
diffmod_table_12$gene<-sapply(strsplit(as.character(diffmod_table_12$id), "\\|"), `[`, 5)
plot_krasko_12<-EnhancedVolcano(diffmod_table_12,
lab = diffmod_table_12$gene,
x = 'diff_mod_rate_KO_vs_WT',
y = 'pval_KO_vs_WT',
xlim = c(-1.5,1.5),
FCcutoff = 0.8,
pCutoff = 0.001,
title = 'KRASKO vs day 5',
subtitle = '')
plot_krasko_12
diffmod_table_04<-read.csv('/Users/vikas/Documents/UCSC/lab/testing/04/majority_direction_kmer_diffmod.table', header = TRUE)
diffmod_table_04$neglogpval<- -log10(diffmod_table_04$pval_KO_vs_WT)
#diffmod_table_04<-diffmod_table_04[diffmod_table_04$pval_KO_vs_WT < 0.05,]
diffmod_table_04$sig = FALSE
diffmod_table_04$sig[diffmod_table_04$pval_KO_vs_WT < 0.05 ] = TRUE
# plot_krasko_04<-ggplot(diffmod_table_04, aes( x = diff_mod_rate_KO_vs_WT , y = neglogpval, color = sig)) +
#   geom_point() +
#   scale_y_log10() +
#   theme_classic() +
#   geom_hline(yintercept = -log10(0.05)) +
#   ylab('-log10(pval)') +
#   xlab('diffence in modification rate')
rownames(diffmod_table_04)<-diffmod_table_04$id
z<-head(diffmod_table_04)
diffmod_table_04$gene<-sapply(strsplit(as.character(diffmod_table_04$id), "\\|"), `[`, 5)
plot_krasko_04<-EnhancedVolcano(diffmod_table_04,
lab = diffmod_table_04$gene,
x = 'diff_mod_rate_KO_vs_WT',
y = 'pval_KO_vs_WT',
xlim = c(-1.5,1.5),
FCcutoff = 0.8,
pCutoff = 0.001,
title = 'KRASKO vs day 7',
subtitle = '')
plot_krasko_04
plot_krasko_04<-EnhancedVolcano(diffmod_table_04,
lab = diffmod_table_04$gene,
x = 'diff_mod_rate_KO_vs_WT',
y = 'pval_KO_vs_WT',
xlim = c(-1.5,1.5),
FCcutoff = 0.8,
pCutoff = 0.001,
pointSize = 1,
title = 'KRASKO vs day 7',
subtitle = '')
plot_krasko_04
plot_krasko_04<-EnhancedVolcano(diffmod_table_04,
lab = diffmod_table_04$gene,
x = 'diff_mod_rate_KO_vs_WT',
y = 'pval_KO_vs_WT',
xlim = c(-1.5,1.5),
ylim = c(0,1000),
FCcutoff = 0.8,
pCutoff = 0.001,
pointSize = 1,
title = 'KRASKO vs day 7',
subtitle = '')
plot_krasko_04
plot_krasko_04<-EnhancedVolcano(diffmod_table_04,
lab = diffmod_table_04$gene,
x = 'diff_mod_rate_KO_vs_WT',
y = 'pval_KO_vs_WT',
xlim = c(-1.5,1.5),
ylim = c(0,300),
FCcutoff = 0.8,
pCutoff = 0.001,
pointSize = 1,
title = 'KRASKO vs day 7',
subtitle = '')
plot_krasko_04
col
colnames(diffmod_table)
colnames(diffmod_table_04)
hist(diffmod_table_04$coverage_KO.rep1)
hist(diffmod_table_04$coverage_WT.rep1)
hist(diffmod_table_04$coverage_KO.rep1)
View(diffmod_table_12)
diffmod_table_12<-diffmod_table_12[diffmod_table_12$coverage_KO.rep1 > 99,]
diffmod_table_04<-diffmod_table_04[diffmod_table_04$coverage_KO.rep1 > 99,]
#rownames(diffmod_table_04)<-diffmod_table_04$id
z<-head(diffmod_table_04)
diffmod_table_04$gene<-sapply(strsplit(as.character(diffmod_table_04$id), "\\|"), `[`, 5)
plot_krasko_04<-EnhancedVolcano(diffmod_table_04,
lab = diffmod_table_04$gene,
x = 'diff_mod_rate_KO_vs_WT',
y = 'pval_KO_vs_WT',
xlim = c(-1.5,1.5),
ylim = c(0,300),
FCcutoff = 0.8,
pCutoff = 0.001,
pointSize = 1,
title = 'KRASKO vs day 7',
subtitle = '')
plot_krasko_04
diffmod_table_04<-diffmod_table_04[diffmod_table_04$coverage_KO.rep1 > 30 && diffmod_table_04$coverage_WT.rep1 > 30,]
#rownames(diffmod_table_04)<-diffmod_table_04$id
z<-head(diffmod_table_04)
diffmod_table_04$gene<-sapply(strsplit(as.character(diffmod_table_04$id), "\\|"), `[`, 5)
plot_krasko_04<-EnhancedVolcano(diffmod_table_04,
lab = diffmod_table_04$gene,
x = 'diff_mod_rate_KO_vs_WT',
y = 'pval_KO_vs_WT',
xlim = c(-1.5,1.5),
ylim = c(0,300),
FCcutoff = 0.8,
pCutoff = 0.001,
pointSize = 1,
title = 'KRASKO vs day 7',
subtitle = '')
plot_krasko_04
library(ggplot2)
library(reshape2)
library(viridis)
library(wesanderson)
library(ggvegan)
setwd('/Users/vikas/Documents/UCSC/lab/kim_lab/evmeta/bin/')
reporting_stats = read.csv('/Users/vikas/Documents/UCSC/lab/kim_lab/evmeta/bin/zymo_reporting_stats.csv')
#reporting_stats = reporting_stats[-c(2),]
#reporting_stats$name = c('aPOMP','Kraken2','Megan-LR')
colnames(reporting_stats) = c('Name','Precision','Recall','F1')
reporting_stats_long = melt(reporting_stats)
reporting_stats_plot = ggplot(reporting_stats_long, aes(fill=variable, y=value, x=Name)) +
geom_bar(position="dodge", stat="identity") +
scale_fill_viridis(discrete=TRUE) +
scale_y_continuous(expand = c(NA, 1), limits = c(0,1)) +
theme_classic() +
#xlab('Pipeline') +
#ylab('Percent') +
theme(legend.title=element_blank(), axis.title.x = element_blank(), axis.title.y = element_blank()) +
theme(legend.position="bottom")
reporting_stats_plot
View(reporting_stats)
